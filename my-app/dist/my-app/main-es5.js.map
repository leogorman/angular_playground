{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/http.service.ts","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HomeComponent","clickCounter","name","myClasses","active","notActive","countClick","HttpService","http","get","providedIn","ListComponent","_http","getBeer","subscribe","data","brews","console","log","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent} from './home/home.component';\nimport { ListComponent} from './list/list.component';\n\n// ** EXAMPLE OF ROUTING TO ENABLE NAVIGATION BETWEEN PAGES **\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent},\n  { path: 'list', component: ListComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n// ** EXAMPLE OF ANGULAR COMPONENTS **\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<header>\n  <div class=\"container\">\n    <a href = \"#\" class=\"logo\">My App</a>\n    <nav>\n      <ul>\n        <!-- ** EXAMPLE OF NAVIGATION BETWEEN PAGES ** -->\n        <li><a href=\"#\" routerLink=\"/\">Home</a></li>\n        <li><a href=\"#\" routerLink=\"/list\">Breweries</a></li>\n      </ul>\n    </nav>\n  </div>\n</header>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ListComponent } from './list/list.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  clickCounter = 0;\n  name = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  countClick(){\n    this.clickCounter += 1;\n  }\n\n  setClasses(){\n    let myClasses = {\n      active: this.clickCounter > 4,\n      notActive: this.clickCounter <= 4,\n    }\n    return myClasses;\n  }\n\n}\n","<h1>Hello World!</h1>\n\n\n<!-- ** EXAMPLE OF TWO WAY DATA BINDING USING FORM ELEMENT ** -->\n<div class=\"play-container\">\n    <input type=\"text\" [(ngModel)]=\"name\">\n    &nbsp; <strong>Text Output: </strong> {{name}}\n</div>\n\n<!-- ** EXAMPLE OF ONE WAY DATA BINDING USING FORM ELEMENT ** -->\n<div class=\"play-container\">\n  <p>You've clicked <span (click)=\"countClick()\">this</span> {{ clickCounter }} times. </p>\n</div>\n\n<!-- ** EXAMPLE OF CLASS BINDING ** -->\n<div class=\"play-container\" [ngClass]=\"setClasses()\">\n\n<!--\n     ** EXAMPLE OF STYLE BINDING **\n     [ngStyle]=\"{\n      'background-color': clickCounter > 4 ? 'yellow' : 'lightgray',\n      'border' : clickCounter > 4 ? 'yellow' : 'lightgray',\n      }\" ]\n-->\n\n<!--  ** EXAMPLE OF ng-template FOR IF + ELSE STATEMENTS ** -->\n  <ng-template [ngIf]=\"clickCounter > 4\" [ngIfElse]=\"none\">\n    <p>The click counter <strong>IS GREATER</strong> than 4.</p>\n  </ng-template>\n\n  <ng-template #none>\n    <p>The click counter is <strong>not greater</strong> than 4.</p>\n  </ng-template>\n</div>\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\n\n// ** EXAMPLE OF SERVICE USING HTTP TO INTERACT WITH API **\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  // ** DEPENDENCY INJECTION **\n  constructor(private http: HttpClient) { }\n\n  // ** USING ANGULAR HTTP CLIENT TO FETCH DATA FROM A PUBLIC API **\n  getBeer() {\n    return this.http.get('https://api.openbrewerydb.org/breweries');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpService} from '../http.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.scss']\n})\nexport class ListComponent implements OnInit {\n\n  brews;\n\n  // ** EXAMPLE OF DEPENDENCY INJECTION **\n  constructor(private _http: HttpService) { }\n\n  // ** LIFECYCLE HOOK, RUNS WHEN COMPONENT IS LOADED **\n  ngOnInit(): void {\n    this._http.getBeer().subscribe(data => {\n      this.brews = data;\n      console.log(this.brews);\n    });\n  }\n\n}\n","<h1>Breweries</h1>\n\n<!-- ** DISPLAY LIST DATA FROM BREWERY API ** -->\n\n<!-- IF BREWS DATA LIST EXISTS, SHOW UL ELEMENT & ITERATE THROUGH LIST -->\n<ul *ngIf=\"brews\">\n  <li *ngFor=\"let brew of brews\">\n    <p class=\"name\">{{ brew.name }}</p>\n    <p class=\"country\">{{ brew.country }}</p>\n    <a class=\"site\" href=\"{{ brew.website_url }}\">View Website</a>\n  </li>\n</ul>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}